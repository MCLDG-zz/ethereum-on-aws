#  Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#  Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
#  the License. A copy of the License is located at
#      http://aws.amazon.com/apache2.0/
#  or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
#  CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and
#  limitations under the License.

AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Lambda function that executes Ethereum transactions
Parameters:
  LambdaSecurityGroup:
    Description: Security group for Lambda
    Type: String
  LambdaSubnetPublic:
    Description: Public subnet for Lambda
    Type: String
  LambdaSubnetPrivate:
    Description: Private subnet for Lambda
    Type: String

Resources:
  ExecuteTransactions:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: ./
      FunctionName: ExecuteTransactions
      Handler: handler.handler
      MemorySize: 256
      Role: !GetAtt
        - IamRoleLambdaExecution
        - Arn
      Runtime: nodejs8.10
      Timeout: 300
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
        SubnetIds:
          - !Ref LambdaSubnetPublic
          - !Ref LambdaSubnetPrivate
  IamRoleLambdaExecution:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: ExecuteTransactionsPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: stmt1
                Effect: Allow
                Action:
                  - 'ec2:CreateNetworkInterface'
                  - 'ec2:DescribeInstances'
                  - 'dynamodb:PutItem'
                  - 'ec2:DescribeNetworkInterfaces'
                  - 'dynamodb:GetItem'
                  - 'ec2:DeleteNetworkInterface'
                Resource: '*'
              - Sid: stmt2
                Effect: Allow
                Action:
                  - 's3:GetObject'
                Resource:
                  - 'arn:aws:s3:::*/*'
      Path: /
      RoleName: ExecuteTransactionsRole
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole'


Outputs:
  ExecuteTransactionsLambdaArn:
    Description: ARN of the lambda that ExecuteTransactions
    Value: !GetAtt ExecuteTransactions.Arn